import api from './api';

export const healthProfileApi = {
  // T·∫°o ho·∫∑c c·∫≠p nh·∫≠t health profile
  createOrUpdateHealthProfile: async (data) => {
    try {
      console.log('üì§ Sending data to backend:', JSON.stringify(data, null, 2));
      const response = await api.post('/api/parents/health-profile', data);
      console.log('‚úÖ Backend response:', response.data);
      return response.data;
    } catch (error) {
      console.error('‚ùå Backend error:', error.response?.data);
      
      // X·ª≠ l√Ω l·ªói c·ª• th·ªÉ t·ª´ backend
      if (error.response?.data?.message) {
        const errorMessage = error.response.data.message;
        
        if (errorMessage.includes("Kh√¥ng t√¨m th·∫•y ph·ª• huynh")) {
          throw new Error("T√†i kho·∫£n ch∆∞a ƒë∆∞·ª£c thi·∫øt l·∫≠p ph·ª• huynh. Vui l√≤ng li√™n h·ªá admin ƒë·ªÉ ƒë∆∞·ª£c h·ªó tr·ª£.");
        } else if (errorMessage.includes("Kh√¥ng t√¨m th·∫•y h·ªçc sinh")) {
          throw new Error("Ch∆∞a c√≥ h·ªçc sinh ƒë∆∞·ª£c li√™n k·∫øt v·ªõi t√†i kho·∫£n. Vui l√≤ng li√™n h·ªá admin ƒë·ªÉ ƒë∆∞·ª£c h·ªó tr·ª£.");
        } else {
          throw new Error(errorMessage);
        }
      }
      
      // L·ªói m·∫°ng ho·∫∑c server
      if (error.response?.status === 401) {
        throw new Error("Phi√™n ƒëƒÉng nh·∫≠p ƒë√£ h·∫øt h·∫°n. Vui l√≤ng ƒëƒÉng nh·∫≠p l·∫°i.");
      } else if (error.response?.status === 404) {
        throw new Error("Kh√¥ng t√¨m th·∫•y API endpoint. Vui l√≤ng li√™n h·ªá admin.");
      } else if (error.response?.status >= 500) {
        throw new Error("L·ªói server. Vui l√≤ng th·ª≠ l·∫°i sau.");
      } else {
        throw new Error("C√≥ l·ªói x·∫£y ra khi g·ª≠i khai b√°o s·ª©c kh·ªèe.");
      }
    }
  },

  // L·∫•y health profile c·ªßa user hi·ªán t·∫°i
  getHealthProfile: async () => {
    try {
      const response = await api.get('/api/parents/health-profile');
      return response.data;
    } catch (error) {
      if (error.response?.data?.message) {
        throw new Error(error.response.data.message);
      }
      throw new Error("Kh√¥ng th·ªÉ t·∫£i th√¥ng tin s·ª©c kh·ªèe.");
    }
  },

  // L·∫•y th√¥ng tin m·ªõi khai b√°o
  getLatestHealthDeclaration: async () => {
    try {
      const response = await api.get('/health-declaration/latest');
      return response.data;
    } catch (error) {
      if (error.response?.data?.message) {
        throw new Error(error.response.data.message);
      }
      throw new Error("Kh√¥ng th·ªÉ t·∫£i th√¥ng tin khai b√°o m·ªõi nh·∫•t.");
    }
  }
};

export default healthProfileApi; 