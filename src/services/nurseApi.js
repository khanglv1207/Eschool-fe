import api from './api';

// ==================== NURSE API ====================

// L·∫•y l·ªãch tr√¨nh h√¥m nay c·ªßa h·ªçc sinh
export const getTodaySchedules = async (studentId) => {
  try {
    const response = await api.get(`/api/nurse/today-schedules/${studentId}`);
    return response.data;
  } catch (error) {
    const errorMsg = error.response?.data?.message;
    throw new Error(errorMsg || "Kh√¥ng th·ªÉ l·∫•y l·ªãch tr√¨nh h√¥m nay");
  }
};

// L·∫•y danh s√°ch y√™u c·∫ßu thu·ªëc ƒëang ch·ªù x·ª≠ l√Ω
export const getPendingMedicationRequests = async () => {
  try {
    const response = await api.get("/api/nurse/medication-requests/pending");
    return response.data;
  } catch (error) {
    const errorMsg = error.response?.data?.message;
    throw new Error(errorMsg || "Kh√¥ng th·ªÉ l·∫•y danh s√°ch y√™u c·∫ßu thu·ªëc ƒëang ch·ªù");
  }
};

// L·∫•y danh s√°ch h·ªçc sinh ƒë√£ x√°c nh·∫≠n
export const getConfirmedStudents = async () => {
  try {
    const response = await api.get("/api/nurse/confirmed-students");
    return response.data;
  } catch (error) {
    const errorMsg = error.response?.data?.message;
    throw new Error(errorMsg || "Kh√¥ng th·ªÉ l·∫•y danh s√°ch h·ªçc sinh ƒë√£ x√°c nh·∫≠n");
  }
};

// G·ª≠i k·∫øt qu·∫£ ki·ªÉm tra s·ª©c kh·ªèe
export const submitHealthCheckup = async (checkupData) => {
  try {
    const response = await api.post("/api/nurse/health-checkup", checkupData);
    return response.data;
  } catch (error) {
    const errorMsg = error.response?.data?.message;
    throw new Error(errorMsg || "Kh√¥ng th·ªÉ g·ª≠i k·∫øt qu·∫£ ki·ªÉm tra s·ª©c kh·ªèe");
  }
};

// C·∫≠p nh·∫≠t tr·∫°ng th√°i thu·ªëc
export const updateMedicationStatus = async (medicationData) => {
  try {
    const response = await api.put("/api/nurse/update-medication-status", medicationData);
    return response.data;
  } catch (error) {
    const errorMsg = error.response?.data?.message;
    throw new Error(errorMsg || "Kh√¥ng th·ªÉ c·∫≠p nh·∫≠t tr·∫°ng th√°i thu·ªëc");
  }
};

// ƒê√°nh d·∫•u l·ªãch tr√¨nh ƒë√£ th·ª±c hi·ªán
export const markScheduleAsTaken = async (scheduleId) => {
  try {
    const response = await api.put(`/api/nurse/mark-schedule-as-taken/${scheduleId}`);
    return response.data;
  } catch (error) {
    const errorMsg = error.response?.data?.message;
    throw new Error(errorMsg || "Kh√¥ng th·ªÉ ƒë√°nh d·∫•u l·ªãch tr√¨nh ƒë√£ th·ª±c hi·ªán");
  }
};

// L·∫•y danh s√°ch t·∫•t c·∫£ y t√°
export const getAllNurses = async () => {
  try {
    const response = await api.get("/api/nurse/get-all-nurse");
    return response.data;
  } catch (error) {
    const errorMsg = error.response?.data?.message;
    throw new Error(errorMsg || "Kh√¥ng th·ªÉ l·∫•y danh s√°ch y t√°");
  }
};

// C·∫≠p nh·∫≠t th√¥ng tin y t√°
export const updateNurse = async (nurseData) => {
  try {
    const response = await api.put("/api/nurse/update-nurse", nurseData);
    return response.data;
  } catch (error) {
    const errorMsg = error.response?.data?.message;
    throw new Error(errorMsg || "Kh√¥ng th·ªÉ c·∫≠p nh·∫≠t th√¥ng tin y t√°");
  }
};

// T·∫°o y t√° m·ªõi
export const createNurse = async (nurseData) => {
  try {
    const response = await api.post("/api/nurse/create-nurse", nurseData);
    return response.data;
  } catch (error) {
    const errorMsg = error.response?.data?.message;
    throw new Error(errorMsg || "Kh√¥ng th·ªÉ t·∫°o y t√° m·ªõi");
  }
};

// X√≥a y t√°
export const deleteNurse = async (nurseId) => {
  try {
    const response = await api.delete(`/api/nurse/delete-nurse/${nurseId}`);
    return response.data;
  } catch (error) {
    const errorMsg = error.response?.data?.message;
    throw new Error(errorMsg || "Kh√¥ng th·ªÉ x√≥a y t√°");
  }
};

// L·∫•y th√¥ng tin nurse hi·ªán t·∫°i (d·ª±a tr√™n user ƒëang ƒëƒÉng nh·∫≠p)
export const getCurrentNurse = async () => {
  try {
    console.log('üîç ƒêang g·ªçi API /api/nurse/get-all-nurse...');
    const response = await api.get('/api/nurse/get-all-nurse');
    console.log('üë©‚Äç‚öïÔ∏è All nurses from API:', response.data);

    const nurses = response.data.result || [];
    console.log('üìã S·ªë l∆∞·ª£ng nurses:', nurses.length);
    console.log('üìã Nurses data:', nurses);

    if (nurses.length > 0) {
      const selectedNurse = nurses[0];
      console.log('‚úÖ Ch·ªçn nurse ƒë·∫ßu ti√™n:', selectedNurse);
      return selectedNurse; // Tr·∫£ v·ªÅ nurse ƒë·∫ßu ti√™n
    } else {
      throw new Error('Kh√¥ng c√≥ nurse n√†o trong h·ªá th·ªëng');
    }
  } catch (error) {
    console.error('‚ùå Error fetching nurse info:', error);
    console.error('‚ùå Error response:', error.response?.data);
    console.error('‚ùå Error status:', error.response?.status);
    throw new Error('Kh√¥ng th·ªÉ l·∫•y th√¥ng tin nurse');
  }
};

// L·∫•y t·∫•t c·∫£ danh s√°ch y t√°
export const getAllNursesList = async () => {
  try {
    console.log('üîç ƒêang g·ªçi API /api/nurse/get-all-nurse...');
    const response = await api.get('/api/nurse/get-all-nurse');
    console.log('üë©‚Äç‚öïÔ∏è All nurses from API:', response.data);

    const nurses = response.data.result || [];
    console.log('üìã S·ªë l∆∞·ª£ng nurses:', nurses.length);
    console.log('üìã Nurses data:', nurses);

    return nurses;
  } catch (error) {
    console.error('‚ùå Error fetching all nurses:', error);
    console.error('‚ùå Error response:', error.response?.data);
    console.error('‚ùå Error status:', error.response?.status);
    throw new Error('Kh√¥ng th·ªÉ l·∫•y danh s√°ch y t√°');
  }
};

// L·∫•y nurse theo ID
export const getNurseById = async (nurseId) => {
  try {
    // T·∫°m th·ªùi l·∫•y t·∫•t c·∫£ v√† filter theo ID
    const response = await api.get('/api/nurse/get-all-nurse');
    const nurses = response.data.result || [];
    const nurse = nurses.find(n => n.nurseId === nurseId || n.id === nurseId);

    if (nurse) {
      return nurse;
    } else {
      throw new Error('Kh√¥ng t√¨m th·∫•y nurse v·ªõi ID n√†y');
    }
  } catch (error) {
    console.error('‚ùå Error fetching nurse by ID:', error.response?.data);
    throw new Error('Kh√¥ng th·ªÉ l·∫•y th√¥ng tin nurse');
  }
};

export const nurseApi = {
  getCurrentNurse,
  getAllNurses,
  getAllNursesList,
  getNurseById,
  getTodaySchedules,
  getPendingMedicationRequests,
  getConfirmedStudents,
  submitHealthCheckup,
  updateMedicationStatus,
  markScheduleAsTaken,
  updateNurse,
  createNurse,
  deleteNurse
};

export default nurseApi; 