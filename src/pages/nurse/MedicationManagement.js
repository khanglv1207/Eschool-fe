import React, { useState, useEffect } from 'react';
import { FaPills, FaClock, FaCheck, FaTimes, FaSync, FaCalendarAlt, FaUserMd } from 'react-icons/fa';
import {
    getPendingMedicationRequests,
    updateMedicationStatus,
    getTodaySchedules,
    markScheduleAsTaken
} from '../../services/medicineApi';

function MedicationManagement() {
    const [pendingRequests, setPendingRequests] = useState([]);
    const [todaySchedules, setTodaySchedules] = useState([]);
    const [loading, setLoading] = useState(true);
    const [activeTab, setActiveTab] = useState('requests'); // 'requests' or 'schedules'
    const [message, setMessage] = useState('');
    const [selectedStudentId, setSelectedStudentId] = useState('');

    useEffect(() => {
        loadData();
    }, []);

    const loadData = async () => {
        try {
            setLoading(true);

            // Load pending medication requests
            const requests = await getPendingMedicationRequests();
            setPendingRequests(requests);

            // Load today schedules for all students
            const schedules = await getTodaySchedules('all'); // Assuming 'all' gets all students
            setTodaySchedules(schedules);

            console.log('üìã Data loaded:', { requests, schedules });
        } catch (error) {
            console.error('‚ùå L·ªói t·∫£i d·ªØ li·ªáu:', error);
            setMessage('‚ùå L·ªói t·∫£i d·ªØ li·ªáu: ' + error.message);
        } finally {
            setLoading(false);
        }
    };

    const handleStatusUpdate = async (requestId, status) => {
        try {
            setLoading(true);
            await updateMedicationStatus({
                requestId: requestId,
                status: status
            });
            setMessage(`‚úÖ ƒê√£ c·∫≠p nh·∫≠t tr·∫°ng th√°i th√†nh ${status === 'APPROVED' ? 'duy·ªát' : 't·ª´ ch·ªëi'}`);
            loadData(); // Reload data
        } catch (error) {
            console.error('‚ùå L·ªói c·∫≠p nh·∫≠t tr·∫°ng th√°i:', error);
            setMessage('‚ùå L·ªói c·∫≠p nh·∫≠t tr·∫°ng th√°i: ' + error.message);
        } finally {
            setLoading(false);
        }
    };

    const handleMarkAsTaken = async (scheduleId) => {
        try {
            setLoading(true);
            await markScheduleAsTaken(scheduleId);
            setMessage('‚úÖ ƒê√£ ƒë√°nh d·∫•u u·ªëng thu·ªëc th√†nh c√¥ng');
            loadData(); // Reload data
        } catch (error) {
            console.error('‚ùå L·ªói ƒë√°nh d·∫•u u·ªëng thu·ªëc:', error);
            setMessage('‚ùå L·ªói ƒë√°nh d·∫•u u·ªëng thu·ªëc: ' + error.message);
        } finally {
            setLoading(false);
        }
    };

    const getStatusColor = (status) => {
        switch (status) {
            case 'PENDING': return '#ffc107';
            case 'APPROVED': return '#28a745';
            case 'REJECTED': return '#dc3545';
            default: return '#6c757d';
        }
    };

    const getStatusText = (status) => {
        switch (status) {
            case 'PENDING': return 'Ch·ªù x·ª≠ l√Ω';
            case 'APPROVED': return 'ƒê√£ duy·ªát';
            case 'REJECTED': return 'ƒê√£ t·ª´ ch·ªëi';
            default: return 'Kh√¥ng x√°c ƒë·ªãnh';
        }
    };

    if (loading) {
        return (
            <div style={{
                minHeight: '100vh',
                background: 'linear-gradient(135deg, #667eea 0%, #764ba2 100%)',
                display: 'flex',
                alignItems: 'center',
                justifyContent: 'center'
            }}>
                <div style={{
                    background: '#fff',
                    borderRadius: '20px',
                    padding: '40px',
                    boxShadow: '0 20px 40px rgba(0,0,0,0.1)',
                    textAlign: 'center',
                    maxWidth: '400px',
                    width: '90%'
                }}>
                    <div style={{
                        width: '60px',
                        height: '60px',
                        border: '4px solid #f3f3f3',
                        borderTop: '4px solid #667eea',
                        borderRadius: '50%',
                        animation: 'spin 1s linear infinite',
                        margin: '0 auto 20px'
                    }}></div>
                    <div style={{ color: '#667eea', fontSize: '18px', fontWeight: '600' }}>
                        ƒêang t·∫£i d·ªØ li·ªáu...
                    </div>
                    <style>{`
            @keyframes spin {
              0% { transform: rotate(0deg); }
              100% { transform: rotate(360deg); }
            }
          `}</style>
                </div>
            </div>
        );
    }

    return (
        <div style={{
            minHeight: '100vh',
            background: 'linear-gradient(135deg, #667eea 0%, #764ba2 100%)',
            padding: '20px'
        }}>
            <div style={{
                maxWidth: '1200px',
                margin: '0 auto',
                background: '#fff',
                borderRadius: '20px',
                boxShadow: '0 20px 40px rgba(0,0,0,0.1)',
                overflow: 'hidden'
            }}>
                {/* Header */}
                <div style={{
                    background: 'linear-gradient(135deg, #667eea 0%, #764ba2 100%)',
                    color: '#fff',
                    padding: '30px',
                    textAlign: 'center'
                }}>
                    <div style={{ fontSize: '24px', fontWeight: 'bold', marginBottom: '8px' }}>
                        <FaUserMd style={{ marginRight: '10px' }} />
                        Qu·∫£n l√Ω ƒë∆°n thu·ªëc v√† l·ªãch u·ªëng
                    </div>
                    <div style={{ fontSize: '14px', opacity: 0.9 }}>
                        Duy·ªát ƒë∆°n thu·ªëc v√† theo d√µi l·ªãch u·ªëng thu·ªëc c·ªßa h·ªçc sinh
                    </div>
                </div>

                {/* Content */}
                <div style={{ padding: '40px' }}>
                    {message && (
                        <div style={{
                            marginBottom: '20px',
                            padding: '15px',
                            borderRadius: '8px',
                            textAlign: 'center',
                            fontWeight: '600',
                            color: message.includes("‚úÖ") ? '#155724' : '#721c24',
                            background: message.includes("‚úÖ") ? '#d4edda' : '#f8d7da',
                            border: `1px solid ${message.includes("‚úÖ") ? '#c3e6cb' : '#f5c6cb'}`
                        }}>
                            {message}
                        </div>
                    )}

                    {/* Tabs */}
                    <div style={{
                        display: 'flex',
                        gap: '10px',
                        marginBottom: '30px',
                        borderBottom: '2px solid #e9ecef'
                    }}>
                        <button
                            onClick={() => setActiveTab('requests')}
                            style={{
                                background: activeTab === 'requests' ? '#667eea' : 'transparent',
                                color: activeTab === 'requests' ? '#fff' : '#495057',
                                border: 'none',
                                padding: '12px 24px',
                                borderRadius: '8px 8px 0 0',
                                cursor: 'pointer',
                                fontSize: '16px',
                                fontWeight: '600',
                                display: 'flex',
                                alignItems: 'center',
                                gap: '8px'
                            }}
                        >
                            <FaPills />
                            ƒê∆°n thu·ªëc ch·ªù duy·ªát ({pendingRequests.length})
                        </button>
                        <button
                            onClick={() => setActiveTab('schedules')}
                            style={{
                                background: activeTab === 'schedules' ? '#667eea' : 'transparent',
                                color: activeTab === 'schedules' ? '#fff' : '#495057',
                                border: 'none',
                                padding: '12px 24px',
                                borderRadius: '8px 8px 0 0',
                                cursor: 'pointer',
                                fontSize: '16px',
                                fontWeight: '600',
                                display: 'flex',
                                alignItems: 'center',
                                gap: '8px'
                            }}
                        >
                            <FaClock />
                            L·ªãch u·ªëng h√¥m nay ({todaySchedules.length})
                        </button>
                    </div>

                    {/* Refresh Button */}
                    <div style={{ textAlign: 'right', marginBottom: '20px' }}>
                        <button
                            onClick={loadData}
                            disabled={loading}
                            style={{
                                background: '#667eea',
                                color: '#fff',
                                border: 'none',
                                padding: '10px 20px',
                                borderRadius: '8px',
                                cursor: loading ? 'not-allowed' : 'pointer',
                                fontSize: '14px',
                                fontWeight: '600',
                                display: 'flex',
                                alignItems: 'center',
                                gap: '8px',
                                opacity: loading ? 0.6 : 1
                            }}
                        >
                            <FaSync />
                            {loading ? 'ƒêang t·∫£i...' : 'L√†m m·ªõi'}
                        </button>
                    </div>

                    {/* Pending Requests Tab */}
                    {activeTab === 'requests' && (
                        <div>
                            <h3 style={{ color: '#495057', marginBottom: '20px' }}>
                                ƒê∆°n thu·ªëc ch·ªù duy·ªát
                            </h3>

                            {pendingRequests.length > 0 ? (
                                <div style={{
                                    background: '#f8f9fa',
                                    borderRadius: '12px',
                                    padding: '20px',
                                    border: '2px solid #e9ecef'
                                }}>
                                    <div style={{ display: 'grid', gap: '15px' }}>
                                        {pendingRequests.map((request, index) => (
                                            <div key={index} style={{
                                                background: '#fff',
                                                borderRadius: '8px',
                                                padding: '20px',
                                                border: '1px solid #dee2e6',
                                                display: 'flex',
                                                justifyContent: 'space-between',
                                                alignItems: 'center'
                                            }}>
                                                <div style={{ flex: 1 }}>
                                                    <div style={{ fontWeight: '600', color: '#495057', marginBottom: '8px' }}>
                                                        <FaPills style={{ marginRight: '8px', color: '#667eea' }} />
                                                        {request.medicineName}
                                                    </div>
                                                    <div style={{ fontSize: '14px', color: '#6c757d', marginBottom: '4px' }}>
                                                        H·ªçc sinh: {request.studentName} - L·ªõp: {request.className}
                                                    </div>
                                                    <div style={{ fontSize: '14px', color: '#6c757d', marginBottom: '4px' }}>
                                                        Ph·ª• huynh: {request.parentName} - SƒêT: {request.parentPhone}
                                                    </div>
                                                    <div style={{ fontSize: '12px', color: '#6c757d' }}>
                                                        Li·ªÅu l∆∞·ª£ng: {request.dosage} - T·∫ßn su·∫•t: {request.frequency}
                                                    </div>
                                                    {request.note && (
                                                        <div style={{ fontSize: '12px', color: '#856404', fontStyle: 'italic', marginTop: '4px' }}>
                                                            Ghi ch√∫: {request.note}
                                                        </div>
                                                    )}
                                                </div>

                                                <div style={{ display: 'flex', gap: '10px' }}>
                                                    <button
                                                        onClick={() => handleStatusUpdate(request.id, 'APPROVED')}
                                                        disabled={loading}
                                                        style={{
                                                            background: '#28a745',
                                                            color: '#fff',
                                                            border: 'none',
                                                            padding: '8px 16px',
                                                            borderRadius: '6px',
                                                            fontSize: '12px',
                                                            cursor: loading ? 'not-allowed' : 'pointer',
                                                            display: 'flex',
                                                            alignItems: 'center',
                                                            gap: '4px'
                                                        }}
                                                    >
                                                        <FaCheck />
                                                        Duy·ªát
                                                    </button>
                                                    <button
                                                        onClick={() => handleStatusUpdate(request.id, 'REJECTED')}
                                                        disabled={loading}
                                                        style={{
                                                            background: '#dc3545',
                                                            color: '#fff',
                                                            border: 'none',
                                                            padding: '8px 16px',
                                                            borderRadius: '6px',
                                                            fontSize: '12px',
                                                            cursor: loading ? 'not-allowed' : 'pointer',
                                                            display: 'flex',
                                                            alignItems: 'center',
                                                            gap: '4px'
                                                        }}
                                                    >
                                                        <FaTimes />
                                                        T·ª´ ch·ªëi
                                                    </button>
                                                </div>
                                            </div>
                                        ))}
                                    </div>
                                </div>
                            ) : (
                                <div style={{
                                    textAlign: 'center',
                                    padding: '60px 20px',
                                    background: '#f8f9fa',
                                    borderRadius: '12px',
                                    border: '2px solid #e9ecef'
                                }}>
                                    <div style={{ fontSize: '48px', marginBottom: '20px' }}>‚úÖ</div>
                                    <h3 style={{ color: '#495057', marginBottom: '10px' }}>
                                        Kh√¥ng c√≥ ƒë∆°n thu·ªëc ch·ªù duy·ªát
                                    </h3>
                                    <p style={{ color: '#6c757d', fontSize: '14px' }}>
                                        T·∫•t c·∫£ ƒë∆°n thu·ªëc ƒë√£ ƒë∆∞·ª£c x·ª≠ l√Ω ho·∫∑c ch∆∞a c√≥ ƒë∆°n thu·ªëc n√†o ƒë∆∞·ª£c g·ª≠i.
                                    </p>
                                </div>
                            )}
                        </div>
                    )}

                    {/* Today Schedules Tab */}
                    {activeTab === 'schedules' && (
                        <div>
                            <h3 style={{ color: '#495057', marginBottom: '20px' }}>
                                L·ªãch u·ªëng thu·ªëc h√¥m nay
                            </h3>

                            {todaySchedules.length > 0 ? (
                                <div style={{
                                    background: '#f8f9fa',
                                    borderRadius: '12px',
                                    padding: '20px',
                                    border: '2px solid #e9ecef'
                                }}>
                                    <div style={{ display: 'grid', gap: '15px' }}>
                                        {todaySchedules.map((schedule, index) => (
                                            <div key={index} style={{
                                                background: '#fff',
                                                borderRadius: '8px',
                                                padding: '20px',
                                                border: '1px solid #dee2e6',
                                                display: 'flex',
                                                justifyContent: 'space-between',
                                                alignItems: 'center'
                                            }}>
                                                <div style={{ flex: 1 }}>
                                                    <div style={{ fontWeight: '600', color: '#495057', marginBottom: '8px' }}>
                                                        <FaClock style={{ marginRight: '8px', color: '#667eea' }} />
                                                        {schedule.medicineName}
                                                    </div>
                                                    <div style={{ fontSize: '14px', color: '#6c757d', marginBottom: '4px' }}>
                                                        H·ªçc sinh: {schedule.studentName} - L·ªõp: {schedule.className}
                                                    </div>
                                                    <div style={{ fontSize: '14px', color: '#6c757d', marginBottom: '4px' }}>
                                                        Th·ªùi gian: {schedule.scheduledTime} - Li·ªÅu l∆∞·ª£ng: {schedule.dosage}
                                                    </div>
                                                    <div style={{ fontSize: '12px', color: '#6c757d' }}>
                                                        Ghi ch√∫: {schedule.notes || 'Kh√¥ng c√≥'}
                                                    </div>
                                                </div>

                                                <div style={{ display: 'flex', alignItems: 'center', gap: '10px' }}>
                                                    {schedule.isTaken ? (
                                                        <span style={{
                                                            background: '#28a745',
                                                            color: '#fff',
                                                            padding: '6px 12px',
                                                            borderRadius: '20px',
                                                            fontSize: '12px',
                                                            fontWeight: '600'
                                                        }}>
                                                            ‚úÖ ƒê√£ u·ªëng
                                                        </span>
                                                    ) : (
                                                        <button
                                                            onClick={() => handleMarkAsTaken(schedule.id)}
                                                            disabled={loading}
                                                            style={{
                                                                background: '#ffc107',
                                                                color: '#000',
                                                                border: 'none',
                                                                padding: '8px 16px',
                                                                borderRadius: '6px',
                                                                fontSize: '12px',
                                                                cursor: loading ? 'not-allowed' : 'pointer',
                                                                display: 'flex',
                                                                alignItems: 'center',
                                                                gap: '4px'
                                                            }}
                                                        >
                                                            <FaCheck />
                                                            ƒê√£ u·ªëng
                                                        </button>
                                                    )}
                                                </div>
                                            </div>
                                        ))}
                                    </div>
                                </div>
                            ) : (
                                <div style={{
                                    textAlign: 'center',
                                    padding: '60px 20px',
                                    background: '#f8f9fa',
                                    borderRadius: '12px',
                                    border: '2px solid #e9ecef'
                                }}>
                                    <div style={{ fontSize: '48px', marginBottom: '20px' }}>üìÖ</div>
                                    <h3 style={{ color: '#495057', marginBottom: '10px' }}>
                                        Kh√¥ng c√≥ l·ªãch u·ªëng thu·ªëc h√¥m nay
                                    </h3>
                                    <p style={{ color: '#6c757d', fontSize: '14px' }}>
                                        H√¥m nay kh√¥ng c√≥ h·ªçc sinh n√†o c·∫ßn u·ªëng thu·ªëc theo l·ªãch.
                                    </p>
                                </div>
                            )}
                        </div>
                    )}
                </div>
            </div>
        </div>
    );
}

export default MedicationManagement; 